{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","songs","audioRef","currentSong","isPlaying","setSongs","setCurrentSong","setIsPlaying","setSongInfo","songInfo","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","playPromise","current","play","undefined","then","audio","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","type","onChange","e","console","log","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillhop","uuid4","App","useRef","useState","songData","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAoIeA,EAhIA,SAAC,GAWL,IATHC,EASE,EATFA,MACAC,EAQE,EARFA,SACAC,EAOE,EAPFA,YACAC,EAME,EANFA,UACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,eACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,YACAC,EACE,EADFA,SAKEC,EAAuB,SAACC,GAE1B,IAAMC,EAAWX,EAAMY,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOJ,EAASI,GACpB,2BACOD,GADP,IAEIE,QAAQ,IAIL,2BACAF,GADP,IAEIE,QAAQ,OAKpB,GAAIZ,EAAW,CACX,IAAMa,EAAcf,EAASgB,QAAQC,YACjBC,IAAhBH,GACAA,EAAYI,MAAK,SAACC,GACdpB,EAASgB,QAAQC,UAI7Bd,EAASO,IAuBPW,EAAU,SAACC,GACb,OACIC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,IAKrEC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBC,EAAe9B,EAAM+B,WAAU,SAAClB,GAAD,OAAUA,EAAKC,KAAOZ,EAAYY,MACpD,iBAAdc,EAFkB,gCAGXvB,EAAeL,GAAO8B,EAAe,GAAK9B,EAAMgC,SAHrC,OAIjBvB,EAAqBT,GAAO8B,EAAe,GAAK9B,EAAMgC,SAJrC,UAMJ,cAAdJ,EANkB,qBAObE,EAAe,GAAK9B,EAAMgC,UAAY,EAPzB,wBAQV7B,GAAWF,EAASgB,QAAQC,OARlB,UASPb,EAAeL,EAAMA,EAAMgC,OAAS,IAT7B,yBAUPvB,EAAqBT,EAAMA,EAAMgC,OAAS,IAVnC,2DAaX3B,EAAeL,GAAO8B,EAAe,GAAK9B,EAAMgC,SAbrC,QAcjBvB,EAAqBT,GAAO8B,EAAe,GAAK9B,EAAMgC,SAdrC,QAgBlB7B,GAAWF,EAASgB,QAAQC,OAhBV,4CAAH,sDAmBhBe,EAAY,CACdC,UAAU,cAAD,OAAgB1B,EAAS2B,oBAAzB,OAGb,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAId,EAAQd,EAAS6B,eACrB,sBAAKC,MAAO,CAACC,WAAW,6BAAD,OAA+BrC,EAAYsC,MAAM,GAAjD,aAAwDtC,EAAYsC,MAAM,GAA1E,MAAkFJ,UAAU,QAAnH,UACI,uBACIK,IAAK,EACLC,IAAKlC,EAASmC,UAAY,EAC1BC,MAAOpC,EAAS6B,YAChBQ,KAAK,QACLC,SAhDA,SAACC,GACjBC,QAAQC,IAAIhD,EAASgB,QAAQoB,aAC7BW,QAAQC,IAAIF,EAAEG,OAAON,OACrB3C,EAASgB,QAAQoB,YAAcU,EAAEG,OAAON,MACxCrC,EAAY,2BAAIC,GAAL,IAAe6B,YAAaU,EAAEG,OAAON,YA8CpC,qBAAKN,MAAOL,EAAWG,UAAU,qBAErC,4BAAI5B,EAASmC,SAAWrB,EAAQd,EAASmC,UAAY,YAEzD,sBAAKP,UAAU,eAAf,UACI,cAAC,IAAD,CAAiBe,QAAS,WAAOxB,EAAiB,cAAeS,UAAU,YACvEgB,KAAK,KACLC,KAAMC,MAEV,cAAC,IAAD,CAAiBlB,UAAU,OACvBe,QAxEQ,WACjBhD,GACCF,EAASgB,QAAQsC,QACjBjD,GAAcH,KAGdF,EAASgB,QAAQC,OACjBZ,GAAcH,KAkENiD,KAAK,KACLC,KAAMlD,EAAYqD,IAAUC,MAEhC,cAAC,IAAD,CAAiBN,QAAS,WAAOxB,EAAiB,iBAAkBS,UAAU,eAC1EgB,KAAK,KACLC,KAAMK,aC7GXC,EAdF,SAAC,GAA8B,IAA7BzD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACxB,OACI,sBAAKiC,UAAU,iBAAf,UACI,qBACIA,UAAWjC,EAAY,aAAe,GACtCyD,IAAK1D,EAAY2D,MACjBC,IAAK5D,EAAY6D,OAErB,6BAAK7D,EAAY6D,OACjB,6BAAK7D,EAAY8D,aCwBdC,EAjCK,SAAC,GAAsE,IAArEpD,EAAoE,EAApEA,KAAMb,EAA8D,EAA9DA,MAAOK,EAAuD,EAAvDA,eAAgBD,EAAuC,EAAvCA,SAAUU,EAA6B,EAA7BA,GAAIb,EAAyB,EAAzBA,SAAUE,EAAe,EAAfA,UAEjE+D,EAAiB,uCAAG,4BAAArC,EAAA,sEAChBxB,EAAeQ,GADC,OAGhBF,EAAWX,EAAMY,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOA,EACX,2BACOD,GADP,IAEIE,QAAQ,IAIL,2BACAF,GADP,IAEIE,QAAQ,OAGpBX,EAASO,GACNR,GAAWF,EAASgB,QAAQC,OAjBT,2CAAH,qDAoBvB,OACI,sBAAKiC,QAASe,EAAmB9B,UAAS,uBAAkBvB,EAAKE,OAAS,WAAa,IAAvF,UACI,qBAAK6C,IAAK/C,EAAKgD,MAAOC,IAAKjD,EAAKkD,OAChC,sBAAK3B,UAAU,mBAAf,UACI,6BAAKvB,EAAKkD,OACV,6BAAKlD,EAAKmD,gBCJXG,EAtBC,SAAC,GAA2E,IAA1EnE,EAAyE,EAAzEA,MAAOK,EAAkE,EAAlEA,eAAgBJ,EAAkD,EAAlDA,SAAUE,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,SAAUgE,EAAmB,EAAnBA,cACpE,OACI,sBAAKhC,UAAS,kBAAagC,EAAgB,iBAAmB,IAA9D,UACI,yCACA,qBAAKhC,UAAU,gBAAf,SACKpC,EAAMY,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,CACIb,MAAOA,EACPa,KAAMA,EACNR,eAAgBA,EAChBS,GAAID,EAAKC,GAETb,SAAUA,EACVE,UAAWA,EACXC,SAAUA,GAHLS,EAAKC,aCEnBuD,EAZH,SAAC,GAAuC,IAAtCD,EAAqC,EAArCA,cAAeE,EAAsB,EAAtBA,iBACzB,OACI,gCACI,uCACA,yBAAQnB,QAAS,WAAOmB,GAAkBF,IAA1C,oBAEI,cAAC,IAAD,CAAiBf,KAAMkB,a,gBC8ExBC,MAtFf,WACI,MAAO,CACH,CACIT,KAAM,eACNC,OAAQ,SACRH,MAAO,wGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,SACNC,OAAQ,mCACRH,MAAO,mEACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,WACNC,OAAQ,QACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,UACNC,OAAQ,YACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,2BACNC,OAAQ,cACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,aACNC,OAAQ,yBACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,cACNC,OAAQ,UACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,qBACNC,OAAQ,eACRH,MAAO,yGACPxC,MAAO,gDACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,YAEvB,CACIuB,KAAM,UACNC,OAAQ,+CACRH,MAAO,uGACPxC,MAAO,+CACPP,GAAI2D,cACJ1D,QAAQ,EACRyB,MAAO,CAAC,UAAW,cCJhBkC,MAnEf,WAEE,IAAMzE,EAAW0E,iBAAO,MAFX,EAKaC,mBAASC,KALtB,mBAKN7E,EALM,KAKCI,EALD,OAMyBwE,mBAAS5E,EAAM,IANxC,mBAMNE,EANM,KAMOG,EANP,OAOqBuE,oBAAS,GAP9B,mBAONzE,EAPM,KAOKG,EAPL,OAQ6BsE,oBAAS,GARtC,mBAQNR,EARM,KAQSE,EART,OASmBM,mBAAS,CACvCvC,YAAa,EACbM,SAAU,EACVR,oBAAqB,IAZV,mBASN3B,EATM,KASID,EATJ,KAcPuE,EAAoB,SAAC/B,GACzB,IAAM9B,EAAU8B,EAAEG,OAAOb,YACnBM,EAAWI,EAAEG,OAAOP,SAEpBoC,EAAiBvD,KAAKwD,MAAM/D,GAC5BgE,EAAkBzD,KAAKwD,MAAMrC,GAC7BuC,EAAY1D,KAAKwD,MAAOD,EAAiBE,EAAmB,KAClE1E,EAAY,2BAAIC,GAAL,IAAe6B,YAAapB,EAAS0B,WAAUR,oBAAoB+C,MAG1EC,EAAc,uCAAG,4BAAAtD,EAAA,6DACjBC,EAAe9B,EAAM+B,WAAU,SAAClB,GAAD,OAAUA,EAAKC,KAAOZ,EAAYY,MADhD,SAEfT,EAAeL,GAAO8B,EAAe,GAAK9B,EAAMgC,SAFjC,OAGlB7B,GAAWF,EAASgB,QAAQC,OAHV,2CAAH,qDAMpB,OACE,sBAAKoB,MAAO,CAACC,WAAW,6BAAD,OAA+BrC,EAAYsC,MAAM,GAAjD,aAAwDtC,EAAYsC,MAAM,GAA1E,MAAkFJ,UAAS,cAASgC,EAAgB,iBAAmB,IAA9J,UACE,cAAC,EAAD,CACEA,cAAeA,EACfE,iBAAkBA,IAEpB,cAAC,EAAD,CAAMpE,YAAaA,EAAaC,UAAWA,IAC3C,cAAC,EAAD,CACEF,SAAUA,EACVK,aAAcA,EACdH,UAAWA,EACXD,YAAaA,EACbK,YAAaA,EACbH,SAAUA,EACVI,SAAUA,EACVR,MAAOA,EACPK,eAAgBA,IAElB,cAAC,EAAD,CACE+D,cAAeA,EACfpE,MAAOA,EACPK,eAAgBA,EAChBJ,SAAUA,EACVE,UAAWA,EACXC,SAAUA,IAEZ,uBACEgF,iBAAkBN,EAClBO,aAAcP,EACdQ,IAAKrF,EACL2D,IAAK1D,EAAYmB,MACjBkE,QAASJ,QC7DFK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4b8cfe6.chunk.js","sourcesContent":["import React from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = (\n    {\n        songs, \n        audioRef, \n        currentSong, \n        isPlaying, \n        setSongs, \n        setCurrentSong, \n        setIsPlaying, \n        setSongInfo, \n        songInfo\n    }) => {\n\n    // Event Handlers\n    \n    const activeLibraryHandler = (nextPrev) => {\n        // Add active state\n        const newSongs = songs.map((song) => {\n            if(song.id === nextPrev.id){\n                return{\n                    ...song,\n                    active: true\n                };\n            }\n            else {\n                return {\n                    ...song,\n                    active: false\n                };\n        }});\n\n        // Starts playing the music if it's already been playing via Promise IMPORTANT TO AVOID EMPTY STATE / SONG\n        if (isPlaying) {\n            const playPromise = audioRef.current.play()\n            if (playPromise !== undefined) {\n                playPromise.then((audio) => {\n                    audioRef.current.play()\n                })\n            }\n        };\n        setSongs(newSongs);\n    };\n\n    const playSongHandler = () => {\n        if(isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }\n        else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n\n    // Handles dragging the input bar\n    const dragHandler = (e) => {\n        console.log(audioRef.current.currentTime);\n        console.log(e.target.value);\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    };\n\n    // Gets current time of the song\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    };\n\n    // Handles skipping tracks forward and backward\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        }\n        if(direction === 'skip-back'){\n            if((currentIndex - 1) % songs.length === -1){\n                if(isPlaying) audioRef.current.play();\n                await setCurrentSong(songs[songs.length - 1]);\n                await activeLibraryHandler(songs[songs.length - 1]);\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n    };\n    // Add styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    };\n    // Returns JSX for the player component incl. the duration of the song and buttons\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input \n                        min={0} \n                        max={songInfo.duration || 0} \n                        value={songInfo.currentTime} \n                        type=\"range\"\n                        onChange={dragHandler}\n                    />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => {skipTrackHandler('skip-back')}} className=\"skip-back\" \n                    size=\"2x\" \n                    icon={faAngleLeft}\n                />\n                <FontAwesomeIcon className=\"play\" \n                    onClick={playSongHandler} \n                    size=\"2x\" \n                    icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon onClick={() => {skipTrackHandler('skip-forward')}} className=\"skip-forward\" \n                    size=\"2x\" \n                    icon={faAngleRight}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Player;","import React from 'react'\n\nconst Song = ({currentSong, isPlaying}) => {\n    return(\n        <div className=\"song-container\">\n            <img \n                className={isPlaying ? 'rotateSong' : \"\"}\n                src={currentSong.cover} \n                alt={currentSong.name}\n            />\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    );\n};\n\nexport default Song;","import React from 'react'\n\nconst LibrarySong = ({song, songs, setCurrentSong, setSongs, id, audioRef, isPlaying}) => {\n    \n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        // Add active State\n        const newSongs = songs.map((song) => {\n            if(song.id === id){\n                return{\n                    ...song,\n                    active: true\n                };\n            }\n            else {\n                return {\n                    ...song,\n                    active: false\n                };\n        }})\n        setSongs(newSongs);\n        if(isPlaying) audioRef.current.play();\n    };\n\n    return(\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img src={song.cover} alt={song.name}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n};\n\nexport default LibrarySong;","import React from \"react\";\nimport LibrarySong from './LibrarySong';\n\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\n    return(\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => (\n                    <LibrarySong \n                        songs={songs} \n                        song={song} \n                        setCurrentSong={setCurrentSong}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        setSongs={setSongs}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library;","import React from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\n    return (\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => {setLibraryStatus(!libraryStatus)}}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    );\n};\n\nexport default Nav;","import {v4 as uuid4} from \"uuid\";\n\nfunction chillhop(){\n    return [\n        {\n            name: \"Sunrise Hike\",\n            artist: \"Ruck P\",\n            cover: \"https://uploads-ssl.webflow.com/5fc4bca9bd65e8f2bf87f576/605072dd8914772a1df825a9_ow9bl5athaeho9m.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12029\",\n            id: uuid4(),\n            active: false,\n            color: [\"#61B3A3\", \"#EE977C\"]\n        },\n        {\n            name: \"Desire\",\n            artist: \"Psalm Trees, Guillaume Muschalle\",\n            cover: \"https://i.scdn.co/image/ab67616d0000b273f840ef054046580dc12db112\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10550\",\n            id: uuid4(),\n            active: false,\n            color: [\"#EADFCD\", \"#D3392D\"]\n        },        \n        {\n            name: \"Seascape\",\n            artist: \"Makzo\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11772\",\n            id: uuid4(),\n            active: true,\n            color: [\"#4C61A0\", \"#F5A966\"]\n        },\n        {\n            name: \"Cascade\",\n            artist: \"Knowmadic\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/70a56749b8b89815fa75446030c6ba57d2c34de7-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=13091\",\n            id: uuid4(),\n            active: false,\n            color: [\"#6DBF9B\", \"#FCD7C7\"]\n        },\n        {\n            name: \"Everything Fades to Blue\",\n            artist: \"Sleepy Fish\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10018\",\n            id: uuid4(),\n            active: false,\n            color: [\"#256C8F\", \"#FCEAD5\"]\n        },        \n        {\n            name: \"Directions\",\n            artist: \"Blue Wednesday, Shopan\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11232\",\n            id: uuid4(),\n            active: false,\n            color: [\"#C180A8\", \"#B8AADB\"]\n        },\n        {\n            name: \"Forest Lore\",\n            artist: \"Aarigod\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=13004\",\n            id: uuid4(),\n            active: false,\n            color: [\"#BDD277\", \"#BCA154\"]\n        },\n        {\n            name: \"Cabin in the Woods\",\n            artist: \"Philanthrope\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10248\",\n            id: uuid4(),\n            active: false,\n            color: [\"#CD4C3F\", \"#905644\"]\n        },\n        {\n            name: \"Seafoam\",\n            artist: \"Blue Wednesday, Dillan Witherow, Sleepy Fish\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/2a048a5780723e66fff64c3a60814ea64761284f-300x300.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=6757\",\n            id: uuid4(),\n            active: false,\n            color: [\"#F0BCC0\", \"#DFE5E3\"]\n        }\n    ];\n}\n\nexport default chillhop;","import React, {useRef, useState} from \"react\";\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\n// Import Styles\nimport './styles/app.scss';\n\n// Import Util\nimport songData from \"./data.js\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n\n  // States\n  const [songs, setSongs] = useState(songData());\n  const [currentSong, setCurrentSong] = useState(songs[2]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n });\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({...songInfo, currentTime: current, duration, animationPercentage:animation});\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) audioRef.current.play();\n  };\n\n  return ( \n    <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav \n        libraryStatus={libraryStatus} \n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong} isPlaying={isPlaying}/>\n      <Player \n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        setSongs={setSongs}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library \n        libraryStatus={libraryStatus}\n        songs={songs} \n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n      />\n      <audio \n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler} \n        ref={audioRef} \n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}